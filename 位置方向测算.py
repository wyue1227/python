from enum import Enum
from 阴阳五行 import 五行, 天干, 地支, 阴阳, 阴阳五行
from 流年流月 import 流年, 流月, 十神, 流年流月处理


class 方位(Enum):
    中央 = 1
    北方 = 2
    南方 = 3
    东方 = 4
    西方 = 5

class 位置方向测算:

    五行方位 = {
        五行.金: 方位.西方,
        五行.木: 方位.东方,
        五行.水: 方位.北方,
        五行.火: 方位.南方,
        五行.土: 方位.中央
    }

    def 流动性判断(self, 流年运势: 十神, 日主: 阴阳五行) -> bool:
        # 流年运势 == 伤官 且 天干 == 癸 流动性大
        # TODO 更多流动性判断需要追加
        if (流年运势 == 十神.伤官 and 日主.五行对象 == 五行.水 and 日主.阴阳对象 == 阴阳.阴):
            return True
        else:
            return False


    def 解卦(self, 起卦时间: str, 生辰: str, 问题相关时间: str) -> 方位:
        """
        起卦时间: 年月日时分秒 20240625 21:32:00
        生辰: 年月日时分秒 20240625 21:32:00
        问题时间: 问题内容对应的时间，比如明年我适合去哪里，用来获取对应的流年
        """
        流年_2024 = 流年流月处理.流年获取(问题相关时间)
        # TODO 根据生辰获取日主的天干地支
        八字日主天干 = 天干.get("癸")
        八字日主地支 = 地支.get("酉")
        流年运势 = 流年流月处理.流年运势计算(八字日主天干, 流年_2024.天干对象)
        # 流动性大 -> 流月地支
        # 流动性小 -> 八字地支
        if (self.流动性判断(流年运势, 八字日主天干)):
            流月_202406 = 流月(天干.get("庚"), 地支.get("午"))
            流月地支 = 流月_202406.地支对象.五行对象
            return self.五行方位.get(流月地支)
        else:
            return self.五行方位.get(八字日主地支.五行对象)


print(位置方向测算().解卦("20240625 21:32:00", "19900625 21:32:00", "20240625 21:32:00"))